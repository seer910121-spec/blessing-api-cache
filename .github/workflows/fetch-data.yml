name: Fetch and Cache Google Sheet Data

# 設定每小時的第 30 分鐘自動執行，並且在手動觸發時也可以運行
on:
  schedule:
    - cron: '30 * * * *'
  workflow_dispatch:

jobs:
  fetch_and_cache:
    runs-on: ubuntu-latest
    
    # 這是最關鍵的一步：授予 Actions 寫入權限，確保它可以提交 data.json
    permissions:
      contents: write 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js and jq (JSON Processor)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Fetch data from Google Apps Script API
        id: fetch
        run: |
          # 🚨🚨🚨 請將 YOUR_APPS_SCRIPT_URL 替換為你的實際網址！🚨🚨🚨
          # 確保整個網址被單引號 ' ' 完整包住
          API_URL='https://script.google.com/macros/s/AKfycbwwOq-GBnu1fnkiMM9OidM2UdB71IWsnc9-IY9SUkHThuj72uTqXk68meuh7NS7b9rZ/exec'
          
          echo "Fetching data from Apps Script..."
          DATA=$(curl -s -L "$API_URL")
          
          # 檢查 curl 是否成功獲取內容
          if [ -z "$DATA" ]; then
            echo "::error::Curl failed or returned empty content."
            exit 1
          fi
          
          # 檢查回傳內容是否為有效的 JSON 格式
          if echo "$DATA" | jq empty 2>/dev/null; then
            echo "$DATA" > data.json
            echo "Fetched valid data and saved to data.json"
          else
            echo "::error::Fetched content is not valid JSON. Skipping commit."
            echo "Returned Data Sample: ${DATA:0:100}..." 
            exit 1
          fi

      - name: Commit and push changes
        # 只有在 data.json 有變化的時候才提交
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add data.json
          git commit -m "Auto-cache: Update data.json from Google Sheet" || echo "No changes to commit"
          git push
